{
  "name": "pbf",
  "version": "0.0.2",
  "description": "a protocol buffer implementation in javascript",
  "main": "index.js",
  "scripts": {
    "test": "tape test/index.js",
    "cov": "istanbul cover test/index.js  && coveralls < ./coverage/lcov.info"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:mapbox/pbf.git"
  },
  "keywords": [
    "protocol",
    "buffer",
    "pbf"
  ],
  "author": {
    "name": "Konstantin Kaefer"
  },
  "license": "BSD",
  "bugs": {
    "url": "https://github.com/mapbox/pbf/issues"
  },
  "homepage": "https://github.com/mapbox/pbf",
  "dependencies": {
    "ieee754": "~1.1.2"
  },
  "devDependencies": {
    "tape": "~2.4.2",
    "istanbul": "~0.2.11",
    "brfs": "1.0.1",
    "coveralls": "~2.10.1"
  },
  "readme": "# pbf\n\n[![build status](https://secure.travis-ci.org/mapbox/pbf.png)](http://travis-ci.org/mapbox/pbf) [![Coverage Status](https://coveralls.io/repos/mapbox/pbf/badge.png)](https://coveralls.io/r/mapbox/pbf)\n\nA [protocol buffers](http://code.google.com/p/protobuf/) implementation in\nJavaScript for node and browsers.\n\n## install\n\n    npm install pbf\n\n## api\n\n### `Protobuf(buf, pos)`\n\n```js\nvar Pbf = require('pbf');\nvar protobuffer = new Pbf(buffer);\nvar varInt = protobuffer.readVarInt();\n```\n\nReading\n\n* readUInt32\n* readUInt32LE\n* readUInt64\n* readUInt64LE\n* readDouble\n* readDoubleLE\n* readVarint\n* readSVarint\n* readString\n* readPacked\n",
  "readmeFilename": "README.md",
  "_id": "pbf@0.0.2",
  "_from": "pbf@"
}
